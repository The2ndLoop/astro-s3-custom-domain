Resources:
  S3CloudTrailLogsBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "cloudtrail-logs-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        {
          BlockPublicAcls: true,
          BlockPublicPolicy: true,
          IgnorePublicAcls: true,
          RestrictPublicBuckets: true,
        }
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: IntelligentTierRule
            Status: Enabled
            Transitions:
              - TransitionInDays: 0
                StorageClass: INTELLIGENT_TIERING
      IntelligentTieringConfigurations: 
        - Id: DeepArchiveConfig
          Status: Enabled
          Tierings: 
            - AccessTier: ARCHIVE_ACCESS
              Days: 90
            - AccessTier: DEEP_ARCHIVE_ACCESS
              Days: 180

  CloudTrailS3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3CloudTrailLogsBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'AWSCloudTrailBucketPermissionsCheck'
            Effect: 'Allow'
            Principal:
              Service: 'cloudtrail.amazonaws.com'
            Action: 's3:GetBucketAcl'
            Resource: !GetAtt S3CloudTrailLogsBucket.Arn
          - Sid: 'AWSCloudTrailBucketDelivery'
            Effect: 'Allow'
            Principal:
              Service: 'cloudtrail.amazonaws.com'
            Action: 's3:PutObject'
            Resource: !Sub '${S3CloudTrailLogsBucket.Arn}/AWSLogs/${AWS::AccountId}/*'
            Condition: 
              StringEquals:
                's3:x-amz-acl': 'bucket-owner-full-control'

  CloudTrail:
    Type: "AWS::CloudTrail::Trail"
    DependsOn:
      - CloudTrailS3BucketPolicy
    Properties:
      S3BucketName: !Ref S3CloudTrailLogsBucket
      IsLogging: true
      EnableLogFileValidation: true
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true